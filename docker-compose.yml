services:
  frontend:
    container_name: frontend
    restart: unless-stopped
    build: 
      context: ./frontend
    ports:
      - 3000:3000
    depends_on:
      - backend
  backend:
    container_name: backend
    build:
      context: ./backend
    restart: always
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy
    environment:
      BACKEND_HOST: 0.0.0.0
      BACKEND_DB_HOST: backend-db
      BACKEND_DB_PORT: 5432
      BACKEND_DB_USER: backend
      BACKEND_DB_PASS: backend
      BACKEND_DB_BASE: backend

  db:
    container_name: db
    image: postgres:16.3-bullseye
    hostname: backend-db
    environment:
      POSTGRES_PASSWORD: "backend"
      POSTGRES_USER: "backend"
      POSTGRES_DB: "backend"
    volumes:
      - backend-db-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: pg_isready -U backend
      interval: 2s
      timeout: 3s
      retries: 40


volumes:
  backend-db-data:
    name: backend-db-data
